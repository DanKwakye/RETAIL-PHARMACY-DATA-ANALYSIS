USE pharmacy;

-- 1. Sales and Revenue Insights
-- What are the total sales and revenue generated by the pharmacy in the last month?
SELECT ROUND(SUM(subtotal), 2) AS total_revenue, COUNT(sales_id) AS total_sales
FROM Sales
WHERE sales_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);


-- Which drugs contribute the most to the total revenue?
SELECT drugname, ROUND(SUM(subtotal), 2) AS revenue
FROM sales 
GROUP BY drugname
ORDER BY revenue DESC LIMIT 10;

-- How has the sales trend changed over the last six months?
SELECT MONTH(sales_date) AS month, ROUND(SUM(subtotal), 2) AS monthly_revenue
FROM sales
WHERE sales_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)
GROUP BY YEAR(sales_date), MONTH(sales_date)
ORDER BY YEAR(sales_date), MONTH(sales_date);

-- CUSTOMER BEHAVIOUR
-- What are the most frequently purchased drugs by customers?
SELECT drugname, COUNT(*) AS purchase_count
FROM sales
GROUP BY drugname
ORDER BY purchase_count DESC LIMIT 10;


-- What is the average spending of customers per visit?
SELECT ROUND(AVG(subtotal), 2) AS average_spending
FROM sales;


-- Are there specific drugs that are more popular among certain or genders?
SELECT c.gender, s.drugname, COUNT(*) AS purchase_count
FROM sales s
	JOIN customers c ON s.customer_id = c.customer_id
    GROUP BY c.gender, s.drugname
    ORDER BY c.gender, purchase_count DESC;


-- SUPPLIER PERFORMANCE
-- Which suppliers deliver the most drugs to the pharmacy?
SELECT d.suppliername, SUM(s.quantity) AS total_quantity_delivered
FROM stock s
	JOIN drugs d ON s.drug_id = d.drug_id
    GROUP BY d.suppliername
    ORDER BY total_quantity_delivered DESC;
    
    
-- How often do drugs from each supplier get sold out?
SELECT d.suppliername, COUNT(*) AS sellout_count
FROM stock s
	JOIN drugs d  ON s.drug_id = d.drug_id
    WHERE s.remainingstock = 0
    GROUP BY  d.suppliername
    ORDER BY sellout_count DESC;
    
    
-- What is the average time between drug delivery and stock depletion for each supplier 
SELECT d.suppliername, AVG(DATEDIFF(sq.depletion_date, sq.deliverydate)) AS average_days_to_depletion
FROM
	(SELECT s.drug_id, s.deliverydate, MIN(s.expirydate) AS depletion_date
    FROM stock s
    WHERE s.remainingstock = 0
    GROUP BY s.drug_id, s.deliverydate) AS sq
JOIN 
	drugs d ON sq.drug_id = d.drug_id
    GROUP BY d.suppliername
    ORDER BY average_days_to_depletion;


-- INVENTORY MANAGEMANT
-- Which drugs are nearing their expiration date and need to be sold quickly?
SELECT d.drugname, d.drugtype, s.remainingstock, s.expirydate, DATEDIFF(s.expirydate, CURDATE()) AS days_until_expiry
FROM stock s
	JOIN drugs d ON s.drug_id = d.drug_id
    WHERE s.expirydate > CURDATE() AND 
		DATEDIFF(s.expirydate, CURDATE()) <=30
	ORDER BY s.expirydate ASC;

-- What are the current stock levels of the top 10 most sold drugs?
WITH TopDrug AS
(
SELECT d.drugname, ROUND(SUM(s.quantity), 2) AS total_sold
FROM sales s
	JOIN drugs d ON s.drugname = d.drugname
    GROUP BY d.drugname
    ORDER BY total_sold DESC LIMIT 10
)
SELECT td.drugname, d.drugtype, SUM(st.remainingstock) AS current_stock
FROM TopDrug td
	JOIN drugs d ON td.drugname = d.drugname
    JOIN stock st ON d.drug_id = st.drug_id
    GROUP BY td.drugname, d.drugtype
    ORDER BY td.total_sold DESC;

-- How often does the pharmacy experience stock shortages?
SELECT 
	COUNT(*) AS total_shortages, 
    COUNT(DISTINCT drug_id) AS unique_drugs_affected, 
    MONTH(deliverydate) AS month, 
    YEAR(deliverydate) AS year
FROM stock
WHERE remainingstock = 0 
GROUP BY YEAR(deliverydate), MONTH(deliverydate)
ORDER BY year, month;

-- CUSTOMER DEMOGRAPHICS
-- What is the gender distribution of the pharmacy's customers?
SELECT gender, COUNT(*) AS customer_count
FROM customers
GROUP BY gender;

-- DRUG EFFECTIVENESS AND FEEDBACK
-- How often do customers return to buy the same drug?
SELECT customer_id, drugname, 
	COUNT(*) AS purchase_count, 
    MIN(sales_date) AS first_purchase_date,
    DATEDIFF(MAX(sales_date), MIN(sales_date)) AS days_between_first_and_last_purchase
FROM sales
GROUP BY customer_id, drugname
HAVING COUNT(*) > 1
ORDER BY purchase_count DESC, days_between_first_and_last_purchase DESC;


-- Which drug types (tablets, syrups, etc.) are most preferred by customers?
SELECT drug_type, COUNT(*) AS total_sales, SUM(quantity) AS total_quantity_sold
FROM sales
GROUP BY drug_type
ORDER BY total_sales DESC, total_quantity_sold DESC;

-- Staff Performance
-- How many sales transactions does each staff member handle per day?
SELECT 
    CONCAT(staff.firstname, ' ', staff.lastname) AS staff_name,
    sales.sales_date,
    COUNT(sales.sales_id) AS transactions_per_day
FROM 
    Sales sales
JOIN 
    Staff staff ON sales.staff_id = staff.staff_id
GROUP BY 
    staff_name, sales.sales_date
ORDER BY 
    sales.sales_date ASC, staff_name ASC;


SELECT CONCAT(staff.firstname, ' ', staff.lastname) AS staff_name,
	ROUND(SUM(sales.subtotal), 2) AS total_revenue
FROM sales sales
    JOIN staff staff ON sales.staff_id = staff.staff_id
GROUP BY staff_name
ORDER BY total_revenue DESC;


-- Are there specific staff members who tend to sell more of a particular drug type?
SELECT CONCAT(staff.firstname, ' ', staff.lastname) AS staff_name,
	sales.drug_type,
    COUNT(sales.sales_id)  AS total_sales
FROM sales sales
	JOIN staff staff ON sales.staff_id = staff.staff_id
GROUP BY staff_name, sales.drug_type
ORDER BY total_sales DESC, staff_name ASC;

-- percentage of staff who male and female
            
SELECT 
    CONCAT(staff.firstname, ' ', staff.lastname) AS staff_name,
    CASE
        WHEN staff.firstname IN ('David', 'Jamie', 'Dominique') AND staff.lastname IN ('Thompson', 'Sullivan') THEN 'Male'
        ELSE 'Female'
    END AS gender,
	COUNT(*) AS total_count
FROM 
    Staff staff
GROUP BY 
    staff_name, gender;

WITH GenderCounts AS (
	SELECT 
    CASE
        WHEN staff.firstname IN ('David', 'Jamie', 'Dominique') AND staff.lastname IN ('Thompson', 'Sullivan') THEN 'Male'
        ELSE 'Female'
    END AS gender,
	COUNT(*) AS total_count
FROM Staff staff
GROUP BY gender
), 
TotalStaff AS (
	SELECT COUNT(*) AS total_staff
    FROM staff
)
SELECT gender, 
	total_count AS total_staff,
    ROUND((total_count * 100 / (SELECT total_staff FROM TotalStaff)), 0) AS percentage
FROM GenderCounts;
